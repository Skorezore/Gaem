#!/bin/sh

date_format='%d.%m.%y %r'
glog1='git log -1'

rm -f report.html report.xml cloc.xsl

cloc --3 --by-file-by-lang --by-percent c --xsl=1 source/ > /dev/null  # This generates the xsl
xmlstarlet edit --inplace \
                --update '//*[@select="@blank" or @select="@comment"]' -v % \
                --update '//*[local-name()="title"]' -v 'Gaem line report -- generated by CLOC' \
                cloc.xsl

cloc --3 --by-file-by-lang --by-percent c --xml --progress-rate=10 --out=report.xml --force-lang=Makefile source/ Makefile
xmlstarlet edit --inplace --delete '/results/header' report.xml
{
	echo '<!DOCTYPE html PUBLIC'
	echo '  "-//W3C//DTD XHTML 1.0 Transitional//EN"'
	echo '  "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">'

	xmlstarlet transform cloc.xsl report.xml
} > report.html

sed -ri 's:(meta.+charset.+)>:\1 />:g' report.html
xmlstarlet edit --inplace --omit-decl --ps \
                --move    '//_:style' '//_:head' \
                --subnode '//_:style' -t text -n '' -v '  .red {color: red;}' \
                --subnode '//_:body'  -t text -n '' -v 'APPEND_MARKER' \
                report.html

# Basically, we need to do this, because XMLStarlet escapes all XML we're generating here, and building it by hand is a *gigantic* PITA
awk "{sub(/APPEND_MARKER/, \"`{ \
	git log -1 --pretty='<p>Latest commit: <a href="https://github.com/Skorezore/Gaem/commit/%H/">%s</a> by <a href="mailto:%cE">%cN</a> on '; \
	date -d "\`git log -1 --date=rfc --pretty='%ad'\`" +"$date_format</p>"; \
	date +"<div id=\"footer\"><small>Generated by <a href=\"http://cloc.sourceforge.net\">CLOC</a> at $date_format</small><br />"; \
	echo '<address>Created and maintained by <a href="mailto:skorezore@gmail.com?cc=nabijaczleweli@gmail.com&amp;subject=Gaem%20-%20">Skorezore</a></address><br /><b class="red">Note, that these metrics are <i>not</i> 100% accurate</b><small>(mainly, because smart counting SLOC is really, <i>really</i> hard)</small><b class="red">!</b></div>'; \
} | sed -e 's/"/\\\\"/g' -e 's/&/\\\&/g' -e 's/&/\\\&/g' | awk 1 ORS=''`\"); print}" report.html > report.html.tmp && mv report.html.tmp report.html

